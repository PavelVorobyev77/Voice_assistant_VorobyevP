import os
import random
import shutil

import speech_recognition
import pyttsx3

sr = speech_recognition.Recognizer()
sr.pause_threshold = 0.5
engine = pyttsx3.init()

commands_dict = {
    'commands': {
        'greeting': ['–ø—Ä–∏–≤–µ—Ç', '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é'],
        'create_task': ['–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', '—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É', '–∑–∞–º–µ—Ç–∫–∞', '–∑–∞–º–µ—Ç–∫–∏'],
        'play_music': ['–≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É', '–¥–∏—Å–∫–æ—Ç–µ–∫–∞', '–≤–∫–ª—é—á–∏ –º—É–∑—ã–∫—É', '–≤–∫–ª—é—á–∞–π –º—É–∑—ã–∫—É', '–º—É–∑—ã–∫–∞'],
        'create_folder': ['—Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É', '—Å–æ–∑–¥–∞–π –ø–∞–ø–∫—É'],
        'delete_folder': ['—É–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É', '—É–¥–∞–ª–∏ –ø–∞–ø–∫—É'],
        'delete_file': ['—É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª', '—É–¥–∞–ª–∏ —Ñ–∞–π–ª'],
        'create_file': ['—Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª', '—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª'],
        'read_file': ['–ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª', '–ø—Ä–æ—á–∏—Ç–∞–π —Ñ–∞–π–ª'],
    }
}


def listen_command():
    try:
        with speech_recognition.Microphone() as mic:
            sr.adjust_for_ambient_noise(source=mic, duration=0.5)
            audio = sr.listen(source=mic)
            query = sr.recognize_google(audio_data=audio, language='ru-RU').lower()

        return query
    except speech_recognition.UnknownValueError:
        return '–ù–µ –ø–æ–Ω—è–ª —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª'


def greeting():
    return '–ó–¥–∞—Ä–æ–≤–∞!'

def create_task():
    print('–ß—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–ª?')
    engine.say('–ß—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–ª?')  # –ü—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º
    engine.runAndWait()  # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
    query = listen_command()

    with open(os.path.join(os.path.expanduser('~'), 'Desktop', 'todo-list.txt'), 'a') as file:
        file.write(f'{query}\n')

    return f'–ó–∞–¥–∞—á–∞ "{query}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–ª!'


def play_music():
    music_folder = os.path.expanduser('~/Desktop/Music')  # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –º—É–∑—ã–∫–æ–π –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ
    files = os.listdir(music_folder)
    random_file = random.choice(files)
    music_file = os.path.join(music_folder, random_file)
    os.startfile(music_file)  # –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é os.startfile

    return f'–¢–∞–Ω—Ü—É–µ–º –ø–æ–¥ {random_file} üé∂üîä'


def create_folder():
    print('–ö–∞–∫—É—é –ø–∞–ø–∫—É —Å–æ–∑–¥–∞—Ç—å?')
    engine.say('–ö–∞–∫—É—é –ø–∞–ø–∫—É —Å–æ–∑–¥–∞—Ç—å?')  # –ü—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º
    engine.runAndWait()  # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
    folder_name = listen_command()
    os.makedirs(os.path.join(os.path.expanduser('~'), 'Desktop', folder_name))

    return f'–ü–∞–ø–∫–∞ "{folder_name}" —Å–æ–∑–¥–∞–Ω–∞ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ!'


def create_file():
    print('–ö–∞–∫–æ–µ –∏–º—è —É —Ñ–∞–π–ª–∞?')
    engine.say('–ö–∞–∫–æ–µ –∏–º—è —É —Ñ–∞–π–ª–∞?')  # –ü—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º
    engine.runAndWait()  # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
    file_name = listen_command()
    print('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –æ–Ω –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è?')
    engine.say('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –æ–Ω –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è?')  # –ü—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º
    engine.runAndWait()  # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
    folder_name = listen_command()

    if folder_name == '—Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª':
        folder_path = os.path.join(os.path.expanduser('~'), 'Desktop')
    else:
        folder_path = os.path.join(os.path.expanduser('~'), 'Desktop', folder_name)

    if not os.path.exists(folder_path):
        return f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ "{folder_name}" –¥–ª—è —Ñ–∞–π–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'

    print('–ì–æ–≤–æ—Ä–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª:')
    content = listen_command()

    file_path = os.path.join(folder_path, file_name + '.txt')

    with open(file_path, 'w') as file:
        file.write(content)

    return f'–§–∞–π–ª "{file_name}.txt" —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ "{folder_name}" –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ!'


def read_file():
    print('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª?')
    engine.say('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª?')
    engine.runAndWait()
    folder_name = listen_command()

    desktop_path = os.path.join(os.path.expanduser('~'), 'Desktop')
    if folder_name == '—Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª':
        folder_path = desktop_path
    else:
        folder_path = os.path.join(desktop_path, folder_name)

    if os.path.exists(folder_path):
        print('–ö–∞–∫–æ–π —Ñ–∞–π–ª –Ω—É–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å?')
        engine.say('–ö–∞–∫–æ–π —Ñ–∞–π–ª –Ω—É–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å?')
        engine.runAndWait()
        file_name = listen_command()

        file_path = os.path.join(folder_path, file_name + '.txt')

        if os.path.exists(file_path):
            with open(file_path, 'r') as file:
                content = file.read()

            if content:
                print(f'--- –ó–∞–≥–æ–ª–æ–≤–æ–∫: {file_name} ---')
                engine.say(f'–ó–∞–≥–æ–ª–æ–≤–æ–∫: {file_name}')
                engine.runAndWait()

                print(content)
                engine.say(content)
                engine.runAndWait()
            else:
                print(f'–§–∞–π–ª "{file_name}.txt" –ø—É—Å—Ç!')
                engine.say(f'–§–∞–π–ª "{file_name}.txt" –ø—É—Å—Ç!')
                engine.runAndWait()
        else:
            print(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ–∞–π–ª "{file_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            engine.say(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ–∞–π–ª "{file_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            engine.runAndWait()
    else:
        print(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–∞–ø–∫–∞ "{folder_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')
        engine.say(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–∞–ø–∫–∞ "{folder_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')
        engine.runAndWait()
    return ''


def delete_folder():
    print('–ö–∞–∫—É—é –ø–∞–ø–∫—É —É–¥–∞–ª–∏—Ç—å?')
    engine.say('–ö–∞–∫—É—é –ø–∞–ø–∫—É —É–¥–∞–ª–∏—Ç—å?')  # –ü—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –≥–æ–ª–æ—Å–æ–º
    engine.runAndWait()  # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–º
    folder_name = listen_command()
    folder_path = os.path.join(os.path.expanduser('~'), 'Desktop', folder_name)

    if os.path.exists(folder_path):
        if len(os.listdir(folder_path)) > 0:
            print(f'–í–Ω–∏–º–∞–Ω–∏–µ: –ø–∞–ø–∫–∞ "{folder_name}" –Ω–µ –ø—É—Å—Ç–∞—è. –£–¥–∞–ª–µ–Ω–∏–µ –µ–µ –ø—Ä–∏–≤–µ–¥–µ—Ç '
                  f'–∫ —É–¥–∞–ª–µ–Ω–∏—é –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤–Ω—É—Ç—Ä–∏. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')
            confirmation = listen_command()
            positive_responses = ['–¥–∞', '–¥–∞, —è —Ö–æ—á—É —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø–∞–ø–∫—É', '–≤—Å–µ —Ä–∞–≤–Ω–æ —É–¥–∞–ª—è–π', '—É–¥–∞–ª—è–π', '—É–¥–∞–ª–∏']
            negative_responses = ['–Ω–µ—Ç', '–Ω–µ –Ω–∞–¥–æ', '–Ω–µ —É–¥–∞–ª—è–π', '—Ç–æ–≥–¥–∞ –Ω–µ —É–¥–∞–ª—è–π']

            if confirmation in positive_responses:
                shutil.rmtree(folder_path)
                return f'–ü–∞–ø–∫–∞ "{folder_name}" –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –≤–º–µ—Å—Ç–µ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º!'
            elif confirmation in negative_responses:
                return f'–û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ "{folder_name}" –æ—Ç–º–µ–Ω–µ–Ω–∞.'
            else:
                return '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –æ—Ç–≤–µ—Ç. –û–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞.'
        else:
            os.rmdir(folder_path)
            return f'–ü–∞–ø–∫–∞ "{folder_name}" –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!'
    else:
        return f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–∞–ø–∫–∞ "{folder_name}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'


def delete_file():
    print('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª?')
    engine.say('–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ñ–∞–π–ª?')
    engine.runAndWait()
    folder_name = listen_command()
    print('–ö–∞–∫–æ–π —Ñ–∞–π–ª –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å?')
    engine.say('–ö–∞–∫–æ–π —Ñ–∞–π–ª –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å?')
    engine.runAndWait()
    file_name = listen_command()

    if folder_name == '—Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª':
        folder_path = os.path.join(os.path.expanduser('~'), 'Desktop')
    else:
        folder_path = os.path.join(os.path.expanduser('~'), 'Desktop', folder_name)
    file_path = os.path.join(folder_path, file_name + '.txt')

    if os.path.exists(file_path):
        os.remove(file_path)
        return f'–§–∞–π–ª "{file_name}.txt" —É–¥–∞–ª–µ–Ω –∏–∑ –ø–∞–ø–∫–∏ "{folder_name}" –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ!'

    else:
        return f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ñ–∞–π–ª "{file_name}.txt" –Ω–µ –Ω–∞–π–¥–µ–Ω.'




def main():
    while True:
        query = listen_command()

        for k, v in commands_dict['commands'].items():
            if query in v:
                if k == 'greeting':
                    print(greeting())
                    engine.say(greeting())
                    engine.runAndWait()
                elif k == 'create_task':
                    print(create_task())
                    #engine.say(create_task())
                    #engine.runAndWait()
                elif k == 'play_music':
                    print(play_music())
                    #engine.say(play_music())
                    #engine.runAndWait()
                elif k == 'create_folder':
                    print(create_folder())
                    #engine.say(create_folder())
                    #engine.runAndWait()
                elif k == 'create_file':
                    print(create_file())
                    #engine.say(create_file())
                    #engine.runAndWait()
                elif k == 'delete_folder':
                    print(delete_folder())
                    #engine.say(delete_folder())
                    #engine.runAndWait()
                elif k == 'delete_file':
                    print(delete_file())
                    #engine.say(delete_file())
                    #engine.runAndWait()
                elif k == 'read_file':
                    print(read_file())
                    #engine.say(read_file())
                    #engine.runAndWait()

if __name__ == '__main__':
    main()